name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: ${{ matrix.test-type == 'unit' && 'Unit Tests' || 'Integration Tests' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [unit, integration]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true
      
      - name: Install dependencies
        run: go mod download
      
      - name: Run unit tests
        if: matrix.test-type == 'unit'
        run: go test -v -race -parallel=4 -coverprofile=coverage.txt -covermode=atomic -coverpkg=./internal/... ./...
      
      - name: Run integration tests
        if: matrix.test-type == 'integration'
        run: go test -v -race -parallel=4 -tags=integration -timeout=5m -run=Integration ./...
        env:
          # Ensure integration tests have clean environment
          CGO_ENABLED: 1
      
      - name: Enforce 90%+ code coverage
        if: matrix.test-type == 'unit'
        run: |
          total=$(go tool cover -func=coverage.txt | grep total: | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total coverage: $total%"
          cov=${total%.*}
          if (( cov < 90 )); then
            echo "::error::Test coverage $total% is below the required 90%."
            exit 1
          fi
      
      - name: Generate HTML coverage report
        if: matrix.test-type == 'unit'
        run: |
          go tool cover -html=coverage.txt -o coverage.html
          echo "ðŸ“Š HTML coverage report generated: coverage.html"
      
      - name: Upload coverage report
        if: matrix.test-type == 'unit'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.html
          retention-days: 30
      
      - name: Test Summary
        run: |
          if [ "${{ matrix.test-type }}" = "unit" ]; then
            echo "âœ… Unit tests completed successfully"
            echo "ðŸ“Š Code coverage enforced at 90%+"
          else
            echo "âœ… Integration tests completed successfully"
            echo "ðŸ”— Full E2E management API workflow tested"
          fi
      
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./coverage.txt
      #     fail_ci_if_error: false 
      # TODO: Replace the above with Coveralls upload step once setup is complete 